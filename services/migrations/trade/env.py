from logging.config import fileConfig
from alembic import context
from sqlalchemy import engine_from_config, pool
from core_fetch.db.models import Base  # üëà —ñ–º–ø–æ—Ä—Ç —Ç–≤–æ—ó—Ö –º–æ–¥–µ–ª–µ–π (Exchange, ExchangeSymbol, —Ç–æ—â–æ)

# –ö–æ–Ω—Ñ—ñ–≥ —ñ–∑ alembic.ini
config = context.config
fileConfig(config.config_file_name)

# –ú–µ—Ç–∞–¥–∞–Ω—ñ –∑ —Ç–≤–æ—ó—Ö –º–æ–¥–µ–ª–µ–π
target_metadata = Base.metadata


def run_migrations_offline():
    """–ó–∞–ø—É—Å–∫ —É –æ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º—ñ (–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è SQL –±–µ–∑ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è)."""
    context.configure(
        url=config.get_main_option("sqlalchemy.url"),
        target_metadata=target_metadata,
        literal_binds=True,
        dialect_opts={"paramstyle": "named"},
    )

    with context.begin_transaction():
        context.run_migrations()


def run_migrations_online():
    """–ó–∞–ø—É—Å–∫ —É –æ–Ω–ª–∞–π–Ω-—Ä–µ–∂–∏–º—ñ (–≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∑–º—ñ–Ω —É –ë–î)."""
    connectable = engine_from_config(
        config.get_section(config.config_ini_section),
        prefix="sqlalchemy.",
        poolclass=pool.NullPool,
    )

    with connectable.connect() as connection:
        context.configure(connection=connection, target_metadata=target_metadata)

        with context.begin_transaction():
            context.run_migrations()


if context.is_offline_mode():
    run_migrations_offline()
else:
    run_migrations_online()
