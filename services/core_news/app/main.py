import logging
import asyncio
from fastapi import FastAPI
from apscheduler.schedulers.asyncio import AsyncIOScheduler

# ‚ö†Ô∏è –ü—ñ–¥—Å—Ç–∞–≤ —Å–≤—ñ–π —Ñ–∞–±—Ä–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–µ—Å—ñ—ó:
# –Ø–∫—â–æ —É —Ç–µ–±–µ async_session() ‚Äî –∑–∞–º—ñ–Ω–∏ –Ω–∞ –Ω—å–æ–≥–æ.
from common.deps.db import AsyncSessionLocal

from core_news.app.services.news_service import check_news_and_halt_trading

log = logging.getLogger(__name__)
app = FastAPI(title="core-news")
scheduler = AsyncIOScheduler()

# ‚Äî‚Äî‚Äî Health ‚Äî‚Äî‚Äî
@app.get("/healthz")
async def healthz():
    return {"status": "ok"}

# ‚Äî‚Äî‚Äî APScheduler jobs ‚Äî‚Äî‚Äî
async def job_check_news():
    async with AsyncSessionLocal() as session:
        await check_news_and_halt_trading(session)

@app.on_event("startup")
async def startup_event():
    # —ñ–Ω—Ç–µ—Ä–≤–∞–ª –º–æ–∂–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∏—Ç–∏ —á–µ—Ä–µ–∑ env/values, —Ç—É—Ç 10 —Ö–≤ —è–∫ —É —Ç–µ–±–µ –≤ –ª–æ–≥–∞—Ö
    scheduler.add_job(job_check_news, "interval", minutes=10, id="check_news_interval")
    scheduler.start()
    log.info("üóìÔ∏è APScheduler started (check_news every 10 minutes)")

@app.on_event("shutdown")
async def shutdown_event():
    scheduler.shutdown(wait=False)
    log.info("üõë APScheduler stopped")
